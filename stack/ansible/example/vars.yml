# This file sets common variables for a Kubernetes cluster. The stack
# defined in this directory is designed to work using default values
# for everything except the variables which are marked as required.
# More fine grained control is possible by editing playbook.yml and
# modifying it using the options documented in each role's README.
#
# The AWS identifiers in this file are not real and must be replaced
# with your own, except for `image_owner`, which corresponds to the
# AWS account from which official Keights images are published.

# ID of VPC (Required).
vpc_id: vpc-ba92ad08

# Master subnet IDs (Required). For masters, each subnet must be in a
# different availability zone. The number of subnets determines the
# number of masters. Either one or three subnets may be used for the
# masters.
master_subnet_ids:
- subnet-6c31888d

# Node subnet IDs (Required).  Nodes do not have any restrictions on
# the subnets that may be used, except that they must be in the same
# VPC as the masters.
node_subnet_ids:
- subnet-6c31888d
- subnet-f3cdd152
- subnet-e245724f

# Resource bucket (Required). The name of an S3 bucket where Lambda
# artifacts will be uploaded for CloudFormation to deploy from.
resource_bucket: cloudboss

# KMS key ID (Required). Used by SSM Parameter Store to encrypt
# certificates.
kms_key_id: d4baff42-9ea6-4f7d-a866-136587c77815

# KMS key alias (Required). Alias of the KMS key ID above. Using an
# alias makes it easier to see which KMS key encrypted the
# certificates, when viewing SSM Parameters in the AWS console.
kms_key_alias: alias/cloudboss

# SSH keypair to assign to instances (Required).
keypair: keights

# Account number where the AMI is located. Only change this if you have
# copied the AMI to your own account.
image_owner: '256008164056'

# CIDR block from which pod IP addresses will be assigned.
pod_cidr: 10.0.0.0/16

# CIDR block from which service IP addresses will be assigned.
service_cidr: 10.1.0.0/16

# EC2 instance type for masters.
master_instance_type: t3.medium

# The apiserver load balancer scheme may be `internet-facing` or `internal`.
# For production clusters, only use `internal`.
load_balancer_scheme: internet-facing

# Size of etcd volumes in GB.
etcd_volume_size: 10

# CIDR which is given ssh access to nodes
ssh_access_cidr: 0.0.0.0/0

# CIDR which is given access to the API server
api_access_cidr: 0.0.0.0/0

# A list of configurations for each node group. Add as many
# node groups as you want to the list below.
node_groups:
- subnet_ids: '{{ node_subnet_ids }}'
  # The name must be unique for each group
  name: app
  min_instances: 2
  max_instances: 2
  instance_type: t3.medium
  keypair: '{{ keypair }}'
  node_labels:
    # Any key/value pairs here will be assigned as node labels.
    class: app

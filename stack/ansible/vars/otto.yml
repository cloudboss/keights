# Must be unique for each cluster. It is best to leave this
# as is, and allow it to be filled in with the value of the
# `CLUSTER` environment variable, which should also match the
# name of your vars file.
cluster_name: '{{ cluster }}'

# ID of VPC.
vpc_id: vpc-ba92ad08

# Number of subnet IDs for master stack must match the number
# of masters. For masters, each subnet must be in a different
# availability zone.
subnet_ids: subnet-6c31888d,subnet-f3cdd152,subnet-e245724f

# Additional security groups to assign to masters may be passed.
# This may be omitted to only use the security groups built by stack.
extra_master_security_groups: [sg-d55a9acdd085d603c, sg-dd75b80d331429d54]

# S3 bucket containing custom CloudFormation Lambda archive files.
# You may use cloudboss-public if you are deploying in us-east-1,
# otherwise you may need to copy the files to a bucket in your region.
# The names of the files are in the Mappings section of the master.yml
# CloudFormation template.
resource_bucket: cloudboss-public

# Number of masters may be either 1 or 3.
num_masters: 3

# AMI ID.
image_id: ami-00ef6c2eb0dc29da1

# Size of master EC2 instances.
master_instance_type: m4.large

# SSH keypair to assign to instances.
keypair: keights

# Load balancer scheme may be `internal` or `internet-facing`
load_balancer_scheme: internet-facing

# KMS key ID used to encrypt certificates.
kms_key_id: d4baff42-9ea6-4f7d-a866-136587c77815

# Alias of KMS key ID above. The alias is used to make it easier
# to see what key encrypted the certificates.
kms_key_alias: alias/cloudboss

# Version of Kubernetes, must match what is in the AMI.
k8s_version: 1.10.0

# Image used for etcd.
etcd_image: k8s.gcr.io/etcd-amd64:3.1.12

# CIDR block to assign to Kubernetes pods.
pod_cidr: 10.0.0.0/16

# CIDR block to assign to Kubernetes services.
service_cidr: 10.1.0.0/16

# CIDR block granted ssh access to EC2 instances.
ssh_access_cidr: 0.0.0.0/0

# CIDR block granted access to APIserver load balancer.
api_access_cidr: 0.0.0.0/0

# Size of etcd storage volumes in GB.
etcd_volume_size: 10

# Node groups is a list so that multiple node types
# may be deployed with their own labels and instance sizes.
# Each item in the list will deploy one CloudFormation stack
# for those nodes.
node_groups:
  -
    # Give each node group a unique name for the cluster.
    name: standard

    # Number of nodes in autoscaling group.
    num_nodes: 3

    # VPC ID will generally match the one above.
    vpc_id: '{{ vpc_id }}'

    # Subnet IDs may be different than those of the masters,
    # but here they are shared.
    subnet_ids: '{{ subnet_ids }}'

    # Generally the AMI ID will be the same one used for
    # the masters.
    image_id: '{{ image_id }}'

    # Size of EC2 instances for node group.
    instance_type: m3.medium

    # SSH keypair to assign to nodes.
    keypair: '{{ keypair }}'

    # CIDR block granted ssh access to EC2 instances.
    ssh_access_cidr: '{{ ssh_access_cidr }}'

    # Kubernetes node labels as comma separated list, see:
    # https://kubernetes.io/docs/concepts/configuration/assign-pod-node
    node_labels: size=standard,env=dev

    # Additional security groups to assign to nodes may be passed.
    # This may be omitted to only use the security groups built by stack.
    extra_security_groups: [sg-ba2b334299d1e9a9e]

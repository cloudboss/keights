---
- name: delete node stack
  cloudformation:
    stack_name: '{{ keights_stack.cluster_name }}-node-{{ item.name }}'
    state: absent
    role_arn: '{{ keights_stack.cfn_role_arn | default(omit) }}'
  loop: '{{ keights_stack.node_groups }}'

- name: find master asg instances
  ec2_asg_facts:
    name: '{{ keights_stack.cluster_name }}-master'
  register: master_asg
  when: 'etcd_mode == "stacked"'

- name: delete master stack
  cloudformation:
    stack_name: '{{ keights_stack.cluster_name }}-master'
    state: absent
    role_arn: '{{ keights_stack.cfn_role_arn | default(omit) }}'
  when: 'etcd_mode == "external"'

- name: find etcd ebs volumes
  ec2_vol_facts:
    filters:
      tag:Name: '{{ keights_stack.cluster_name }}'
      tag:etcd:instance: '*'
  register: etcd_volumes

- name: set etcd ebs volume ids
  set_fact:
    etcd_volume_ids: '{{ etcd_volumes.volumes | map(attribute="id") | list }}'

- name: find etcd asg instances
  ec2_asg_facts:
    name: '{{ keights_stack.cluster_name }}-etcd'
  register: etcd_asg
  when: 'etcd_mode == "external"'

- name: set instances to terminate
  set_fact:
    instances_to_terminate: '{{ master_asg if etcd_mode == "stacked" else etcd_asg }}'

- name: terminate instances for detaching etcd volumes
  ec2:
    instance_ids: '{{ item.instances | map(attribute="instance_id") | list }}'
    state: absent
  # ec2_asg_facts results is a list, so loop even though there is only one asg.
  loop: '{{ instances_to_terminate.results }}'

- name: detach etcd volumes
  ec2_vol:
    id: '{{ item }}'
    instance: None
    state: present
  loop: '{{ etcd_volume_ids }}'

- name: delete master stack
  cloudformation:
    stack_name: '{{ keights_stack.cluster_name }}-master'
    state: absent
    role_arn: '{{ keights_stack.cfn_role_arn | default(omit) }}'
  when: 'etcd_mode == "stacked"'

- name: delete etcd stack
  cloudformation:
    stack_name: '{{ keights_stack.cluster_name }}-etcd'
    state: absent
    role_arn: '{{ keights_stack.cfn_role_arn | default(omit) }}'
  when: 'etcd_mode == "external"'

- name: find route53 zone for etcd
  route53_facts:
    query: hosted_zone
    hosted_zone_method: list_by_name
    dns_name: '{{ keights_stack.etcd_domain | default(default_etcd_domain) }}'
    max_items: 1
  register: hosted_zone_query
  when: not keights_stack.etcd_hosted_zone_id | default('')

- name: set etcd hosted zone id
  set_fact:
    etcd_hosted_zone_id: '{{ keights_stack.etcd_hosted_zone_id | default(hosted_zone_query.HostedZones.0.Id.split("/")[-1]) }}'
  when: hosted_zone_query.HostedZones.0.Name[:-1] == (keights_stack.etcd_domain | default(default_etcd_domain))

- name: find route53 records for etcd
  route53_facts:
    query: record_sets
    hosted_zone_id: '{{ etcd_hosted_zone_id }}'
  register: etcd_record_query
  when: etcd_hosted_zone_id is defined

- name: get route53 record details for etcd
  route53:
    record: '{{ item }}'
    type: A
    zone: '{{ keights_stack.etcd_domain | default(default_etcd_domain) }}'
    private_zone: true
    state: get
  register: etcd_record_details
  loop: '{{ etcd_record_query | json_query("ResourceRecordSets[?Type == `A`].Name") if etcd_record_query.ResourceRecordSets is defined else [] }}'

- name: delete route53 records for etcd
  route53:
    record: '{{ item.set.record }}'
    value: '{{ item.set.value }}'
    type: '{{ item.set.type }}'
    ttl: '{{ item.set.ttl }}'
    zone: '{{ keights_stack.etcd_domain | default(default_etcd_domain) }}'
    private_zone: true
    state: absent
  loop: '{{ etcd_record_details.results | default([]) }}'

- name: delete common stack
  cloudformation:
    stack_name: '{{ keights_stack.cluster_name }}-common'
    state: absent
    role_arn: '{{ keights_stack.cfn_role_arn | default(omit) }}'

- name: delete ssm parameters
  aws_ssm_parameter_store:
    name: '{{ item }}'
    state: absent
  loop:
  - /{{ keights_stack.cluster_name }}/cluster/bootstrap-token
  - /{{ keights_stack.cluster_name }}/cluster/ca.crt
  - /{{ keights_stack.cluster_name }}/controller/apiserver-kubelet-client.crt
  - /{{ keights_stack.cluster_name }}/controller/apiserver-kubelet-client.key
  - /{{ keights_stack.cluster_name }}/controller/ca.key
  - /{{ keights_stack.cluster_name }}/controller/etcd-ca.crt
  - /{{ keights_stack.cluster_name }}/controller/etcd-ca.key
  - /{{ keights_stack.cluster_name }}/controller/front-proxy-ca.crt
  - /{{ keights_stack.cluster_name }}/controller/front-proxy-ca.key
  - /{{ keights_stack.cluster_name }}/controller/sa.key
  - /{{ keights_stack.cluster_name }}/controller/sa.pub

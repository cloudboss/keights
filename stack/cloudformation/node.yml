AWSTemplateFormatVersion: '2010-09-09'

Description: Kubernetes node resources

Parameters:
  ClusterName:
    Description: Name of Kubernetes cluster
    Type: String
  MinInstances:
    Description: Minimum number of instances
    Type: Number
    Default: 1
  MaxInstances:
    Description: Maximum number of instances
    Type: Number
    Default: 1
  UpdateMaxBatchSize:
    Description: Maximum number of instances to update at a time
    Type: Number
    Default: 1
  VpcId:
    Description: ID of VPC where cluster will be placed
    Type: AWS::EC2::VPC::Id
  SubnetIds:
    Description: List of subnets IDs in VPC where cluster will be placed
    Type: List<AWS::EC2::Subnet::Id>
  ImageId:
    Description: ID of AMI used for instances
    Type: AWS::EC2::Image::Id
    Default: ami-00ef6c2eb0dc29da1
  InstanceType:
    Description: Type of EC2 instance
    Type: String
  KeyPair:
    Description: SSH keypair assigned to instances
    Type: AWS::EC2::KeyPair::KeyName
  NodeInstanceProfile:
    Description: IAM Instance profile to assign to instances
    Type: String
  NodeSecurityGroups:
    Description: Security groups of nodes
    Type: CommaDelimitedList
  ClusterDns:
    Description: >-
      IP addres of cluster DNS server; should be
      the value of ServiceCidr + 10
    Default: 10.1.0.10
    Type: String
  NodeLabels:
    Description: >-
      Kubernetes node labels as a comma separated list of
      key=value pairs, for example env=prod,size=large
    Type: String
    Default: ''
  LoadBalancerDnsName:
    Description: DNS name of kubernetes apiserver load balancer
    Type: String

Resources:
  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Ref AWS::StackName
      LaunchConfigurationName: !Ref LaunchConfiguration
      MinSize: !Ref MinInstances
      MaxSize: !Ref MaxInstances
      VPCZoneIdentifier: !Ref SubnetIds
      Tags:
        - Key: Name
          Value: !Ref AWS::StackName
          PropagateAtLaunch: true
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MaxBatchSize: !Ref UpdateMaxBatchSize
        PauseTime: PT15M
        WaitOnResourceSignals: true
        SuspendProcesses:
          - HealthCheck
          - ReplaceUnhealthy
          - AZRebalance
          - AlarmNotification
          - ScheduledActions

  LaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      IamInstanceProfile: !Ref NodeInstanceProfile
      ImageId: !Ref ImageId
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyPair
      PlacementTenancy: default
      SecurityGroups: !Ref NodeSecurityGroups
      UserData:
        Fn::Base64:
          !Sub |
            #cloud-config
            write_files:
              - path: /etc/systemd/system/keights-bootstrap-kubeconfig.service.d/environment.conf
                owner: root:root
                permissions: '0644'
                content: |
                  [Service]
                  Environment=KEIGHTS_CLUSTER_NAME=${ClusterName}
                  Environment=KEIGHTS_K8S_SERVER=${LoadBalancerDnsName}

              - path: /etc/systemd/system/keights-whisper-node.service.d/environment.conf
                owner: root:root
                permissions: '0644'
                content: |
                  [Service]
                  Environment=AWS_REGION=${AWS::Region}
                  Environment=KEIGHTS_CLUSTER_NAME=${ClusterName}

              - path: /etc/systemd/system/keights-kubeadm-join.service.d/environment.conf
                owner: root:root
                permissions: '0644'
                content: |
                  [Service]
                  Environment=KEIGHTS_APISERVER=${LoadBalancerDnsName}
                  Environment=KEIGHTS_APISERVER_PORT=6443

              - path: /etc/systemd/system/keights-signal.service.d/environment.conf
                owner: root:root
                permissions: '0644'
                content: |
                  [Service]
                  Environment=AWS_REGION=${AWS::Region}
                  Environment=KEIGHTS_STACK_NAME=${AWS::StackName}
                  Environment=KEIGHTS_MASTER=false

              - path: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
                owner: root:root
                permissions: '0644'
                content: |
                  [Service]
                  Environment=KEIGHTS_CLUSTER_DOMAIN=k8s.local
                  Environment=KEIGHTS_NODE_LABELS=kubernetes.io/role=node,node-role.kubernetes.io/node=,${NodeLabels}
                  ExecStart=
                  ExecStart=/usr/bin/kubelet \
                              --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf \
                              --kubeconfig=/etc/kubernetes/kubelet.conf \
                              --pod-manifest-path=/etc/kubernetes/manifests \
                              --allow-privileged=true \
                              --network-plugin=cni \
                              --cni-conf-dir=/etc/cni/net.d \
                              --cni-bin-dir=/opt/cni/bin \
                              --cluster-dns=${ClusterDns} \
                              --cluster-domain=${!KEIGHTS_CLUSTER_DOMAIN} \
                              --authorization-mode=Webhook \
                              --client-ca-file=/etc/kubernetes/pki/ca.crt \
                              --cadvisor-port=0 \
                              --rotate-certificates=true \
                              --cert-dir=/var/lib/kubelet/pki \
                              --cloud-provider=aws \
                              --node-labels=${!KEIGHTS_NODE_LABELS}

            runcmd:
              - systemctl daemon-reload
              - systemctl enable kubelet.service
              - systemctl start --no-block keights-kubeadm-join.service
              - systemctl start --no-block keights-signal.service

Outputs:
  AutoScalingGroup:
    Description: Name of autoscaling group
    Value: !Ref AutoScalingGroup

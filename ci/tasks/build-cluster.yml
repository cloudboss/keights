---
platform: linux

image_resource:
  type: docker-image
  source:
    repository: cloudboss.jfrog.io/containers/python
    tag: '3.9.7'

inputs:
- name: repo
- name: version
- name: artifacts-in
  optional: true

outputs:
- name: artifacts-out

caches:
- path: ../../../python

params:
  AWS_REGION: us-east-1
  AWS_DEFAULT_REGION: us-east-1
  CLUSTER:
  KEIGHTS_BRANCH:
  START_UPGRADE:
  ETCD_MODE:

run:
  path: /bin/sh
  args:
  - -e
  - -c
  - |
    deploy=`pwd`/repo/stack/ansible/deploy
    artifacts_out=`pwd`/artifacts-out
    version=`cat version/version`

    if [ -f artifacts-in/noop ]; then
        echo 'Nothing to do, skipping'
        touch ${artifacts_out}/noop
        exit 0
    fi

    if [ -n "${START_UPGRADE}" ]; then
        if [ -f repo/ci/assets/${KEIGHTS_BRANCH}-${ETCD_MODE}/upgrade_from ]; then
            version=`cat repo/ci/assets/${KEIGHTS_BRANCH}-${ETCD_MODE}/upgrade_from`
        else
            echo 'Nothing to upgrade from, skipping'
            touch ${artifacts_out}/noop
            exit 0
        fi
    fi

    first_char=`echo ${version} | cut -c 1`
    [ "${first_char=}" != v ] && version="v${version}"

    build_branch=`echo ${version} | awk -F . '{print $1 "." $2}'`

    cd repo/ci/assets/${build_branch}-${ETCD_MODE}/cluster
    sed "s|__VERSION__|${version}|g" requirements.yml.tmpl > requirements.yml
    CF_LEGAL_CLUSTER=`echo ${CLUSTER} | tr -d .`
    CLUSTER=${CF_LEGAL_CLUSTER} PYTHON_BASE=/python ${deploy}

    cp .cache/keights-system/kubeconfig ${artifacts_out}
